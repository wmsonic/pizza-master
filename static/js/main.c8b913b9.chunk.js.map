{"version":3,"sources":["components/VisualComponents/StyledError/StyledError.js","components/Pages/Login/Login.js","components/Garniture/Garniture.js","components/Pages/PizzaPreview/PizzaPreview.js","components/Pages/PizzaMaker/PizzaMaker.js","components/Pages/PizzaInfo/PizzaInfo.js","components/Pages/Presets/Presets.js","components/Routes/Routes.js","components/VisualComponents/MainNavBtn/MainNavBtn.js","components/Header/Header.js","components/App/App.js","index.js"],"names":["StyledError","styled","div","Login","setAuthenticated","setAuthenticatedFn","defaultUsername","useState","nomUser","setNomUser","requireNameError","setRequireError","history","useHistory","className","id","name","type","placeholder","value","onChange","e","ancienNom","target","onClick","trim","push","document","getElementById","focus","Garniture","nom","mesGarnitures","setGarnituresFn","preset","garniture","prix","toFixed","checked","PizzaPreview","props","isPreset","isInfo","info","src","alt","map","style","display","state","PizzaMaker","Garnitures","ListeGarnitures","PresetsPizza","SauvegarderPizza","prixBase","nomPizza","setNomPizza","setGarnitures","nbGarnitures","reduce","nbGarniture","hasName","hasGarniture","hasUniqueName","every","pizza","totalPrice","oldPrice","resetForm","console","log","savedPizza","garnituresChoisis","forEach","garnitures","makePizza","length","to","PizzaInfo","AddToCart","pathname","window","location","pizzaId","parseInt","replace","Presets","Pizzas","path","useRouteMatch","isPanierUp","URLSearchParams","useLocation","search","get","isNaN","Routes","PizzasList","isAuthenticated","exact","darkRed","MainNavBtn","Link","Header","mainNav","cart","App","pizzaList","setPizzaList","setCart","nouvellePizza","newPizzaList","nouvelleItem","newCart","reactDom","render"],"mappings":"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","file":"static/js/main.c8b913b9.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst StyledError = styled.div`\n    color:red;\n    font-size:.7rem;\n`;\n\nexport default StyledError;","import { useState } from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport StyledError from \"../../VisualComponents/StyledError/StyledError\";\nimport \"./Login.css\";\n\nconst Login = ({setAuthenticatedFn:setAuthenticated, defaultUsername}) =>{\n\n    const [nomUser, setNomUser] = useState(defaultUsername);\n\n    const [requireNameError, setRequireError] = useState(false);\n\n    const history = useHistory();\n\n    const nomUserHandler = (e) => {\n      setNomUser((ancienNom) => e.target.value);\n    };\n\n    const handleLogin = () => {\n        // console.log(history.push)\n        if(nomUser.trim()!==\"\"){\n          setAuthenticated(true);\n          history.push(\"/pizza\");\n        }else{\n          setRequireError(true);\n          document.getElementById(\"usernameInput\").focus();\n        }\n        // console.log(requireNameError);\n    }\n\n    return(\n        <div className=\"loginForm\">\n            <input\n              id=\"usernameInput\"\n              name=\"Nom Pizza\"\n              type=\"text\"\n              placeholder=\"Nom d'usager\"\n              value={nomUser}\n              onChange={nomUserHandler}\n            />\n            {/* <button className=\"myButton\" disabled={nomUser !== \"\" ? false : true} onClick={handleLogin}>\n              Se connecter\n            </button> */}\n            <button className=\"myButton\" onClick={handleLogin}>\n              Se connecter\n            </button>\n            {requireNameError?<StyledError id=\"loginError\" className=\"formError\">*Un nom d'usager est requis</StyledError>:null}\n        </div>\n    );\n}\n\nexport default Login;","import \"./Garniture.css\"\n\nconst Garniture = ({id, nom, mesGarnitures , setGarnituresFn, preset}) =>{\n\n    const garniture = mesGarnitures[id]; // Selection de l'objet de ma garniture a modifier\n    const prix = garniture.prix.toFixed(2);\n    const checkHandler = () =>{\n        garniture['state'] = !garniture['state']; // Modification du state de la garniture choisie\n        setGarnituresFn([...mesGarnitures]);\n    };\n    // console.log(prix);\n    return(\n        <>\n            {(preset?\n                <li>{nom}</li>\n                :\n                <div className=\"choix\">\n                    <label>\n                        <input name={nom} type=\"checkbox\" checked={garniture['state']} onChange={checkHandler}/>\n                        {nom} <span className=\"extraCost\">(+{prix}$)</span>\n                    </label>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default Garniture;","import \"./PizzaPreview.css\";\nconst PizzaPreview = ({ mesGarnitures, ...props }) => {\n    const isPreset = props.preset;\n    const isInfo = props.info;\n    return (\n        <>\n            {props.nom != \"\" ?\n                <div className=\"nomPizza\">{props.nom}</div>\n                :\n                null\n            }\n            <img className=\"pate\" src=\"/img/pate.png\" alt=\"\" />\n            {mesGarnitures.map((garniture) => (\n                (!isPreset ?\n                    <img\n                        key={garniture.nom + \"preview\"}\n                        className={garniture.nom}\n                        src={\"/img/\" + garniture.nom + \".png\"}\n                        alt=\"\"\n                        style={{ display: + garniture.state || isInfo ? 'inherit' : 'none' }}\n                    />\n                    :\n                    <img\n                        key={garniture.nom + \"preview\"}\n                        className={garniture.nom}\n                        src={\"/img/\" + garniture.nom + \".png\"}\n                        alt=\"\"\n                    />\n                )\n            ))}\n\n        </>\n    )\n}\nexport default PizzaPreview;","import { useState } from \"react\";\nimport Garniture from \"../../Garniture/Garniture\";\nimport PizzaPreview from \"../PizzaPreview/PizzaPreview\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport StyledError from \"../../VisualComponents/StyledError/StyledError\";\nimport \"./PizzaMaker.css\";\n\nconst PizzaMaker = ({ ListeGarnitures: Garnitures, PresetsPizza, SauvegarderPizza, prixBase}) => {\n\tconst [nomPizza, setNomPizza] = useState(\"\");\n\tconst history = useHistory();\n\n\tconst nomPizzaHandler = (e) => {\n\t\tsetNomPizza((ancienNom) => e.target.value);\n\t\tconsole.log(hasUniqueName);\n\t};\n\n\tconst [mesGarnitures, setGarnitures] = useState(Garnitures);\n\n\tconst nbGarnitures = mesGarnitures.reduce(\n\t\t(nbGarniture, garniture) =>\n\t\t\tgarniture.state ? nbGarniture + 1 : nbGarniture + 0,\n\t\t0\n\t);\n\n\tconst nameIsUnique = (pizza) => {\n\t\tif (nomPizza.trim() === pizza.nom.trim()) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tconst hasName = nomPizza.trim() !== \"\";\n\tconst hasGarniture = nbGarnitures > 0;\n\tconst hasUniqueName = PresetsPizza.every(nameIsUnique);\n\n\tlet totalPrice = mesGarnitures.reduce(\n\t\t(oldPrice, garniture)=> \n\t\tgarniture.state ? oldPrice + garniture.prix : oldPrice + 0 ,\n\t\tprixBase\n\t);\n\n\tconst makePizza = () => {\n\t\tlet garnituresChoisis = [];\n\t\tmesGarnitures.forEach((garniture) => {\n\t\t\tif (garniture.state) {\n\t\t\t\tgarnituresChoisis.push({ nom: garniture.nom });\n\t\t\t}\n\t\t});\n\t\tlet nouvellePizza = {\n\t\t\tnom: nomPizza,\n\t\t\tgarnitures: garnituresChoisis,\n\t\t\tprix: totalPrice\n\t\t};\n\t\treturn nouvellePizza;\n\t}\n\n\tconst SavePizza = () =>{\n\t\tif (hasGarniture && hasName && hasUniqueName) {//si nom est set, au moins 1 garniture choisie et nom est unique, on peut sauvegarder et rediriger\n\t\t\tconst savedPizza = SauvegarderPizza(makePizza());\n\t\t\tresetForm();\n\t\t\thistory.push(`/pizza/${savedPizza.length - 1}`);\n\t\t}else{\n            return null;\n        }\n\t}\n\n\tconst resetForm = () => {\n\t\tmesGarnitures.map((garniture) => {\n\t\t\tgarniture.state = false;\n\t\t});\n\t\tsetGarnitures([...mesGarnitures]);\n\t\tsetNomPizza(\"\");\n\t};\n\n\treturn (\n\t\t<div className=\"pizzaMaker\">\n\t\t\t<h2>Createur de pizza</h2>\n\t\t\t{/* Preview visuel live de la pizza de l'utilisateur */}\n\t\t\t<div className=\"preview\">\n\t\t\t\t<PizzaPreview mesGarnitures={mesGarnitures} />\n\t\t\t</div>\n\t\t\t{/* Formulaire pour créer la pizza */}\n\t\t\t<div className=\"formulaire\">\n\t\t\t\t<h3>Choix de garnitures :</h3>\n\t\t\t\t<div className=\"ChoixGarnitures\">\n\t\t\t\t\t{mesGarnitures.map((garniture, id) => (\n\t\t\t\t\t\t<Garniture\n\t\t\t\t\t\t\tkey={garniture.nom + id}\n\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\tnom={garniture.nom}\n\t\t\t\t\t\t\tmesGarnitures={mesGarnitures}\n\t\t\t\t\t\t\tsetGarnituresFn={setGarnitures}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<label className=\"formNomPizza\">\n\t\t\t\t\tNommer vôtre pizza :&nbsp;\n\t\t\t\t\t<input\n\t\t\t\t\t\tname=\"Nom Pizza\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={nomPizza}\n\t\t\t\t\t\tonChange={nomPizzaHandler}\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\n\t\t\t\t<div className=\"price\">Prix totale : {totalPrice.toFixed(2)}$</div>\n\n\t\t\t\t<div className=\"formBtns\">\n\t\t\t\t\t<button className=\"myButton\"\n\t\t\t\t\t\tonClick={SavePizza}\n\t\t\t\t\t>\n\t\t\t\t\t\tEnregistrer\n\t\t\t\t\t</button>\n\t\t\t\t\t<Link to=\"/pizza\"><button className=\"myButton\" onClick={resetForm}>Annuler</button></Link>\n\t\t\t\t\t{!hasName ? <StyledError className=\"formError\">*Un nom doit être entré</StyledError> : null}\n\t\t\t\t\t{!hasUniqueName ? <StyledError className=\"formError\">*Un nom unique doit être entré</StyledError> : null}\n\t\t\t\t\t{!hasGarniture ? <StyledError className=\"formError\">*Au moins une garniture doit être selectionné</StyledError> : null}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default PizzaMaker;\n","import PizzaPreview from \"../PizzaPreview/PizzaPreview\";\nimport Garniture from \"../../Garniture/Garniture\";\nimport { Link } from 'react-router-dom';\n\nconst PizzaInfo = ({ PresetsPizza, mesGarnitures, AddToCart }) => {\n    const pathname = window.location.pathname;\n    const pizzaId = parseInt(pathname.replace('/pizza/', ''));\n    return (\n        <>\n            {PresetsPizza.map((pizza, id) => (\n                (id !== pizzaId ? null :\n                    <>\n                        <div className=\"section-head\">\n                            <Link to=\"/pizza\">\n                                <button className=\"myButton\">X</button>\n                            </Link>\n                            <h2>{pizza.nom}</h2>\n                        </div>\n\n                        <div className=\"preview\">\n                            <PizzaPreview\n                                mesGarnitures={pizza.garnitures}\n                                info={true}\n                            />\n                        </div>\n\n                        <div className=\"price\">Prix : {pizza.prix.toFixed(2)}$</div>\n\n                        <div className=\"ulTitle\">Garnitures :</div>\n                        <ul className=\"garnituresPreset\">\n                            {pizza.garnitures.map((garniture, id) => (\n                                <Garniture\n                                    key={pizza.nom + \"ingredient\" + id}\n                                    id={id}\n                                    nom={garniture.nom}\n                                    mesGarnitures={mesGarnitures}\n                                    setGarnituresFn={null}\n                                    preset={true}\n                                />\n                            ))}\n                        </ul>\n                        <button onClick={()=>{AddToCart(pizza)}}>Ajouter au panier</button>\n                        {/* <Link to={`/pizza/${id}`} className=\"addToCart\"><div>Ajouter au panier</div></Link> */}\n                    </>\n                )\n            ))}\n\n        </>\n    )\n}\n\nexport default PizzaInfo;","import { useState } from \"react\";\nimport PizzaPreview from \"../PizzaPreview/PizzaPreview\";\nimport { Link, useLocation } from 'react-router-dom';\nimport { Route, useRouteMatch } from \"react-router\";\nimport PizzaInfo from \"../PizzaInfo/PizzaInfo\";\n\nimport './Presets.css';\n\nconst Presets = ({ ListeGarnitures: Garnitures, PresetsPizza: Pizzas , AddToCart}) => {\n\n\tconst { path } = useRouteMatch();\n\n\tconst pathname = window.location.pathname;\n    const pizzaId = parseInt(pathname.replace('/pizza/', ''));\n\t// console.log(pizzaId);\n\t// const [mesGarnitures, setGarnitures] = useState(Garnitures);\n\n\tconst isPanierUp = new URLSearchParams(useLocation().search).get(\"panier\");\n\n\treturn (\n\t\t<div className=\"pizzas-container\">\n\t\t\t{/* Présentation des pizzas sauvegardés */}\n\t\t\t<div className=\"presets\">\n\t\t\t\t<div className=\"section-head\">\n\t\t\t\t\t<h2>Pizzas</h2>\n\t\t\t\t\t<Link to=\"/pizza/creer\"><button className=\"myButton\">Creer nouvelle pizza</button></Link>\n\t\t\t\t</div>\n\t\t\t\t{Pizzas.map((pizza, id) => (\n\t\t\t\t\t<div key={\"preview\" + id} className=\"preset\">\n\t\t\t\t\t\t<Link to={`/pizza/${id}`}>\n\t\t\t\t\t\t\t<PizzaPreview\n\t\t\t\t\t\t\t\tmesGarnitures={pizza.garnitures}\n\t\t\t\t\t\t\t\tnom={pizza.nom}\n\t\t\t\t\t\t\t\tpreset={true}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Link>\n\n\t\t\t\t\t\t<div className=\"price\">{pizza.prix.toFixed(2)}$</div> \n\n\t\t\t\t\t\t{/* Replace text with add to cart icon & replace link to right link for action */}\n\t\t\t\t\t\t<button className=\"myButton\" onClick={()=>{AddToCart(pizza)}}>Ajouter au panier</button>\n\t\t\t\t\t\t{/* <Link to={`/pizza/${id}`} className=\"addToCart\"><div>Ajouter au panier</div></Link> */}\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<div className={\"pizzaInfo\" + (isNaN(pizzaId) ? \" hiddenInfo\" : \"\")}>\n\t\t\t\t<Route path={`${path}/:pizza`}>\n\t\t\t\t\t<PizzaInfo \n\t\t\t\t\t\tPresetsPizza={Pizzas}\n                        mesGarnitures={Garnitures}\n\t\t\t\t\t\tAddToCart={AddToCart}\n\t\t\t\t\t/>\n\t\t\t\t</Route>\n\t\t\t</div>\n\t\t\t{\n\t\t\t\t<div className={\"panier\"}>\n\t\t\t\t\t{(isPanierUp ? \"cool le panier hein ?!\" : null)}\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t);\n};\n\nexport default Presets;\n","import { useState } from \"react\";\nimport Login from \"../Pages/Login/Login\"\nimport PizzaMaker from \"../Pages/PizzaMaker/PizzaMaker\";\nimport Presets from \"../Pages/Presets/Presets\";\nimport { Redirect, Route, Switch } from 'react-router';\n\nconst Routes = ({ Garnitures, PizzasList , isAuthenticated, setAuthenticatedFn:setAuthenticated, SauvegarderPizza, AddToCart, prixBase}) => {\n    \n\n    if (isAuthenticated) {\n        return (\n            <Switch>\n                <Route exact path=\"/pizza/creer\">\n                    <PizzaMaker\n                        ListeGarnitures={Garnitures}\n                        PresetsPizza={PizzasList}\n                        SauvegarderPizza={SauvegarderPizza}\n                        prixBase={prixBase}\n                    />\n                </Route>\n                <Route path=\"/pizza\">\n                    <Presets\n                        ListeGarnitures={Garnitures}\n                        PresetsPizza={PizzasList}\n                        AddToCart={AddToCart}\n                    />\n                </Route>\n                <Redirect to=\"/pizza\" />\n            </Switch>\n\n        )\n    }\n    return (\n        <Switch>\n            <Route exact path=\"/login\">\n                <Login \n                setAuthenticatedFn={setAuthenticated} \n                defaultUsername={\"\"}/>\n            </Route>\n            <Redirect to=\"/login\" />\n        </Switch>\n\n    )\n};\n\nexport default Routes;","import styled from 'styled-components'\nimport { Link } from \"react-router-dom\";\n\nconst darkRed = \"rgb(221, 4, 38)\";\nconst activeRed = \"rgb(241, 80, 104)\";\n\nconst MainNavBtn = styled(Link)`\n    position: relative;\n    color: ${darkRed};\n    margin: 0.5em 1em;\n    padding: 0.25em 1em;\n    text-align: center;\n    transition: all ease-in .2s;\n\n    &:after{\n        position: absolute;\n        display: block;\n        height:2px;\n        background-color: ${darkRed};\n        width: 0%;\n        content: \"\";\n        transition: width ease-out .3s;\n    }\n\n    &:hover{\n        color: ${activeRed};\n        &:after{\n            width: 80%;\n        }\n    }\n    \n`;\n\nexport default MainNavBtn;","import MainNavBtn from \"../VisualComponents/MainNavBtn/MainNavBtn\";\nimport \"./Header.css\"\n\nconst Header = ({isAuthenticated, cart}) =>{\n    let mainNav;\n    if(isAuthenticated){\n        mainNav = <>\n        <MainNavBtn to=\"/pizza\"><div>Liste Pizza</div></MainNavBtn>\n        <MainNavBtn to=\"/pizza/creer\"><div>Creer Pizza</div></MainNavBtn>\n        <MainNavBtn to={location=>`${location.pathname}?panier=true`}><div>Panier</div></MainNavBtn>\n        </>\n    }\n    return(\n        <header id=\"AppHeader\">\n            <h1>Mi-session Pizza!</h1>\n            <div id=\"mainNav\">\n                {mainNav}\n            </div>\n        </header>\n    );\n}\n\nexport default Header;","import React from \"react\";\nimport {BrowserRouter, useHistory} from 'react-router-dom';\nimport Routes from '../Routes/Routes';\nimport { useState } from \"react\";\nimport './App.css';\nimport Header from '../Header/Header';\n// import Panier from '../Pages/Panier/Panier';\n\n//imports de donnees\nimport Garnitures from \"../Donnees/Garnitures.json\";\nimport Pizzas from \"../Donnees/Pizzas.json\";\n\nconst App = () => {\n    const [isAuthenticated, setAuthenticated] = useState(false);\n    // rendu a faire que ma liste s'update quand je la change dans pizza maker\n    // vérifier que pizzaList retourne un tableau\n    const [pizzaList, setPizzaList] = useState(Pizzas)\n    const history = useHistory();\n    const prixBase = 9.80;\n\n    const sauvegardePizza = (nouvellePizza) => {\n\t\tconst newPizzaList = [...pizzaList, nouvellePizza];\n\t\tsetPizzaList(newPizzaList);\n        return newPizzaList;\n\t};\n\n    const [cart, setCart] = useState([]);\n\n    const addToCart = (nouvelleItem) => {\n\t\tconst newCart = [...cart, nouvelleItem];\n\t\tsetCart(newCart);\n        return newCart;\n\t};\n\n    return(\n        <BrowserRouter>\n            <div className=\"App\">\n                \n                <Header\n                isAuthenticated={isAuthenticated}\n                />\n                \n                {/* <Panier\n                cart={cart}\n                /> */}\n\n                <main>\n                    {/* <PizzaMaker ListeGarnitures={Garnitures} PresetsPizza={pizzaList} setPizzaListFN={setPizzaList}/>\n                    <Presets ListeGarnitures={Garnitures} PresetsPizza={pizzaList}/> */}\n                    <Routes \n                    Garnitures={Garnitures}\n                    PizzasList={pizzaList}\n                    // SetPizzaList={setPizzaList}\n                    isAuthenticated={isAuthenticated}\n                    setAuthenticatedFn={setAuthenticated}\n                    SauvegarderPizza={sauvegardePizza}\n                    AddToCart={addToCart}\n                    prixBase={prixBase}\n                    />\n                </main>\n            </div>\n        \n        </BrowserRouter>\n    )\n}\n\nexport default App;","import react from \"react\";\nimport reactDom from \"react-dom\";\nimport App from \"./components/App/App\";\n\nreactDom.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}